{
  "swagger": "2.0",
  "info": {
    "title": "Gaming API",
    "description": "An API for a gaming website to connect users with games, platforms and mods.",
    "version": "1.0.0"
  },
  "host": "three41final.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/login": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/logout": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/game/": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get all games",
        "description": "Get all the games",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Games found"
          }
        }
      },
      "post": {
        "tags": [
          "Game"
        ],
        "summary": "Create a game",
        "description": "Create a game",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gameTitle": {
                  "example": "any"
                },
                "releaseYear": {
                  "example": "any"
                },
                "language": {
                  "example": "any"
                },
                "gameLength": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                },
                "specialFeatures": {
                  "example": "any"
                },
                "cost": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Game  "
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      }
    },
    "/game/{id}": {
      "get": {
        "tags": [
          "Game"
        ],
        "summary": "Get a game",
        "description": "Enter an id to find an existing game",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Game found"
          }
        }
      },
      "put": {
        "tags": [
          "Game"
        ],
        "summary": "Update a game",
        "description": "Enter an id to update an existing game",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gameTitle": {
                  "example": "any"
                },
                "releaseYear": {
                  "example": "any"
                },
                "language": {
                  "example": "any"
                },
                "gameLength": {
                  "example": "any"
                },
                "rating": {
                  "example": "any"
                },
                "specialFeatures": {
                  "example": "any"
                },
                "cost": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Game updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          }
        }
      },
      "delete": {
        "tags": [
          "Game"
        ],
        "summary": "Delete a game",
        "description": "Enter an id to delete an existing game",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Game deleted"
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Get all the users",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All users found"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a user",
        "description": "Create a new user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "gamesPlayed": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User  "
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user by id",
        "description": "Enter an id to find a specific user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user",
        "description": "Enter an id to update an existing user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "gamesPlayed": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User updated"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "description": "Enter an id to delete a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          }
        }
      }
    },
    "/platform/": {
      "get": {
        "tags": [
          "Platform"
        ],
        "summary": "Get all platforms",
        "description": "Get all the platforms",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All platforms found"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      },
      "post": {
        "tags": [
          "Platform"
        ],
        "summary": "Create a platform",
        "description": "Create a platform",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "platformName": {
                  "example": "any"
                },
                "companyName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Platform  "
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      }
    },
    "/platform/{id}": {
      "get": {
        "tags": [
          "Platform"
        ],
        "summary": "Get platform by id",
        "description": "Get a single platform by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Platform found"
          },
          "404": {
            "description": "Platform not found"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      },
      "put": {
        "tags": [
          "Platform"
        ],
        "summary": "Update a platform",
        "description": "Update a platform by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "platformName": {
                  "example": "any"
                },
                "companyName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Platform updated"
          },
          "404": {
            "description": "Platform not found"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Platform"
        ],
        "summary": "Delete a platform",
        "description": "Delete a platform by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Platform deleted"
          },
          "404": {
            "description": "Platform not found"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      }
    },
    "/profile/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mod/": {
      "get": {
        "tags": [
          "Mod"
        ],
        "summary": "Get all mods",
        "description": "Get all the mods",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All mods found"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      },
      "post": {
        "tags": [
          "Mod"
        ],
        "summary": "Create a mod",
        "description": "Create a mod",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mod": {
                  "example": "any"
                },
                "game": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "cost": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "mod created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      }
    },
    "/mod/{id}": {
      "get": {
        "tags": [
          "Mod"
        ],
        "summary": "Get mod by id",
        "description": "Get a single mod by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "mod found"
          },
          "404": {
            "description": "mod not found"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      },
      "put": {
        "tags": [
          "Mod"
        ],
        "summary": "Update a mod",
        "description": "Update a mod by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mod": {
                  "example": "any"
                },
                "game": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "cost": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "mod updated"
          },
          "404": {
            "description": "mod not found"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Mod"
        ],
        "summary": "Delete a mod",
        "description": "Delete a mod by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "mod deleted"
          },
          "404": {
            "description": "mod not found"
          },
          "500": {
            "description": "Internal Service Error"
          }
        }
      }
    }
  }
}